#!/usr/bin/env bash

install_logstash() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir
    tmp_download_dir=$(mktemp -d)
  else
    local tmp_download_dir=$TMPDIR
  fi

  local source_path
  source_path=$(get_download_file_path $install_type $version $tmp_download_dir)
  download_source $install_type $version $source_path

  # running this in a subshell
  # because we don't want to disturb current working dir
  (
    cd "$(dirname $source_path)" || exit 1
    tar zxf $source_path || exit 1
    cd "$(untar_path $install_type $version $tmp_download_dir)" || exit 1

    # Remove windows related files
    find . -name "*.exe" -print0 | xargs -0 rm
    find . -name "*.bat" -print0 | xargs -0 rm

    mv ./* $install_path || exit 1
  )
}

untar_path() {
  local install_type=$1
  local version=$2
  local tmp_download_dir=$3

  if [ "$install_type" = "version" ]
  then
    echo "$tmp_download_dir/logstash-${version}"
  else
    echo "$tmp_download_dir/logstash-${version}"
  fi
}

download_source() {
  local install_type=$1
  local version=$2
  local download_path=$3
  local download_url

  download_url=$(get_download_url $install_type $version)
  curl -sLo $download_path -C - $download_url
}

get_download_file_path() {
  local install_type=$1
  local version=$2
  local tmp_download_dir=$3
  local pkg_name="logstash-${version}.tar.gz"

  echo "$tmp_download_dir/$pkg_name"
}

get_download_url() {
  local install_type=$1
  local version=$2
  echo "https://artifacts.elastic.co/downloads/logstash/logstash-${version}.tar.gz"
}

install_logstash $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
